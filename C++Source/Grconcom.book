void DFS_component(Graph* G, int v, int component) {
  G->setMark(v, component);
  for (int w=G->first(v); w<G->n(); w = G->next(v,w))
    if (G->getMark(w) == 0)
      DFS_component(G, w, component);
}

void concom(Graph* G) {
  int i;
  int component = 1;   // Counter for current component
  for (i=0; i<G->n(); i++) // For n vertices in graph
    G->setMark(i, 0); // Vertices start in no component
  for (i=0; i<G->n(); i++)
    if (G->getMark(i) == 0) // Start a new component
      DFS_component(G, i, component++);
}
