ParPtrTree::ParPtrTree(int sz) { // Constructor
  size = sz;
  array = new int[sz];           // Create node array
  for(int i=0; i<sz; i++) array[i] = ROOT;
}

// Return True if nodes are in different trees
bool ParPtrTree::differ(int a, int b) {
  int root1 = FIND(a);           // Find root of node a
  int root2 = FIND(b);           // Find root of node b
  return root1 != root2;         // Compare roots
}

void ParPtrTree::UNION(int a, int b) { // Merge subtrees
  int root1 = FIND(a);           // Find root of node a
  int root2 = FIND(b);           // Find root of node b
  if (root1 != root2) array[root2] = root1; // Merge
}
