%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 288 288
%%Creator: Mathematica
%%CreationDate: Mon May 29 16:53:19 EDT 1995
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: 1.35967 
MathPictureStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.952381 0.0323732 0.952381 [
[ 0 0 0 0 ]
[ 1 1.35967 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
P
0 0 m
1 0 L
1 1.35967 L
0 1.35967 L
closepath
clip
newpath
p
p
% Start of sub-graphic
p
0.0238095 0.0323732 0.97619 0.620977 MathSubStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0 0.0666667 0 0.00137341 [
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
p
p
.002 w
.33333 0 m
.33333 .00625 L
s
P
p
.002 w
.66667 0 m
.66667 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .13734 m
.00625 .13734 L
s
P
p
.002 w
0 .27468 m
.00625 .27468 L
s
P
p
.002 w
0 .41202 m
.00625 .41202 L
s
P
p
.002 w
0 .54936 m
.00625 .54936 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .02 .02 ] 0 setdash
p
.5 Mabswid
0 0 m
.13889 .02861 L
.27778 .05723 L
.41667 .08584 L
.55556 .11445 L
.69444 .14306 L
.83333 .17168 L
.97222 .20029 L
s
1 .20601 m
.97222 .20029 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
p
[ .02 .02 ] 0 setdash
p
.5 Mabswid
0 0 m
.13889 .05723 L
.27778 .11445 L
.41667 .17168 L
.55556 .2289 L
.69444 .28613 L
.83333 .34335 L
.97222 .40058 L
s
1 .41202 m
.97222 .40058 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
p
p
.5 Mabswid
s
s
s
s
s
s
s
s
s
s
s
s
.06654 0 m
.06944 .00042 L
s
.06944 .00042 m
.10417 .00691 L
.13889 .01515 L
.27778 .05891 L
.41667 .11347 L
.55556 .17505 L
.69444 .24184 L
.83333 .31278 L
.97222 .38718 L
s
1 .40266 m
.97222 .38718 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
p
p
1 Mabswid
0 0 m
.00434 1e-05 L
.00868 5e-05 L
.01302 .0001 L
.01736 .00019 L
.02604 .00042 L
.03472 .00075 L
.0434 .00116 L
.05208 .00168 L
.06944 .00298 L
.08681 .00466 L
.10417 .00671 L
.13889 .01192 L
.17361 .01863 L
.20833 .02682 L
.27778 .04769 L
.34722 .07451 L
.41667 .1073 L
.55556 .19075 L
.69444 .29805 L
.83333 .42919 L
.97222 .58418 L
s
.99852 .61803 m
.97222 .58418 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
p
p
2 Mabswid
0 .00137 m
.01736 .00165 L
.03472 .00197 L
.05208 .00236 L
.06944 .00283 L
.10417 .00406 L
.12153 .00486 L
.13889 .00582 L
.15625 .00697 L
.17361 .00835 L
.20833 .01198 L
.22569 .01435 L
.24306 .01719 L
.26042 .02059 L
.27778 .02467 L
.3125 .03539 L
.32986 .04239 L
.34722 .05078 L
.36458 .06082 L
.38194 .07285 L
.41667 .10453 L
.43403 .12521 L
.45139 .14998 L
.46875 .17965 L
.48611 .21518 L
.52083 .30874 L
.53819 .36982 L
.55556 .44298 L
.57292 .53061 L
s
.58738 .61803 m
.57292 .53061 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
P
MathSubEnd
P
% End of sub-graphic
P
p
% Start of sub-graphic
p
0.0238095 0.738698 0.97619 1.3273 MathSubStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0 0.02 0 0.000412023 [
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
p
p
.002 w
.1 0 m
.1 .00625 L
s
P
p
.002 w
.2 0 m
.2 .00625 L
s
P
p
.002 w
.3 0 m
.3 .00625 L
s
P
p
.002 w
.4 0 m
.4 .00625 L
s
P
p
.002 w
.5 0 m
.5 .00625 L
s
P
p
.002 w
.6 0 m
.6 .00625 L
s
P
p
.002 w
.7 0 m
.7 .00625 L
s
P
p
.002 w
.8 0 m
.8 .00625 L
s
P
p
.002 w
.9 0 m
.9 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .0412 m
.00625 .0412 L
s
P
p
.002 w
0 .0824 m
.00625 .0824 L
s
P
p
.002 w
0 .12361 m
.00625 .12361 L
s
P
p
.002 w
0 .16481 m
.00625 .16481 L
s
P
p
.002 w
0 .20601 m
.00625 .20601 L
s
P
p
.002 w
0 .24721 m
.00625 .24721 L
s
P
p
.002 w
0 .28842 m
.00625 .28842 L
s
P
p
.002 w
0 .32962 m
.00625 .32962 L
s
P
p
.002 w
0 .37082 m
.00625 .37082 L
s
P
p
.002 w
0 .41202 m
.00625 .41202 L
s
P
p
.002 w
0 .45322 m
.00625 .45322 L
s
P
p
.002 w
0 .49443 m
.00625 .49443 L
s
P
p
.002 w
0 .53563 m
.00625 .53563 L
s
P
p
.002 w
0 .57683 m
.00625 .57683 L
s
P
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .02 .02 ] 0 setdash
p
.5 Mabswid
0 0 m
.04167 .00858 L
.08333 .01717 L
.125 .02575 L
.16667 .03434 L
.20833 .04292 L
.25 .0515 L
.29167 .06009 L
.33333 .06867 L
.375 .07725 L
.41667 .08584 L
.45833 .09442 L
.5 .10301 L
.54167 .11159 L
.58333 .12017 L
.625 .12876 L
.66667 .13734 L
.70833 .14592 L
.75 .15451 L
.79167 .16309 L
.83333 .17168 L
.875 .18026 L
.91667 .18884 L
.95833 .19743 L
1 .20601 L
s
P
P
p
[ .02 .02 ] 0 setdash
p
.5 Mabswid
0 0 m
.04167 .01717 L
.08333 .03434 L
.125 .0515 L
.16667 .06867 L
.20833 .08584 L
.25 .10301 L
.29167 .12017 L
.33333 .13734 L
.375 .15451 L
.41667 .17168 L
.45833 .18884 L
.5 .20601 L
.54167 .22318 L
.58333 .24035 L
.625 .25751 L
.66667 .27468 L
.70833 .29185 L
.75 .30902 L
.79167 .32618 L
.83333 .34335 L
.875 .36052 L
.91667 .37769 L
.95833 .39486 L
1 .41202 L
s
P
P
p
p
.5 Mabswid
s
s
s
s
s
s
s
s
s
s
s
s
.01996 0 m
.02083 .00013 L
s
.02083 .00013 m
.03125 .00207 L
.04167 .00454 L
.08333 .01767 L
.125 .03404 L
.16667 .05251 L
.20833 .07255 L
.25 .09383 L
.29167 .11615 L
.33333 .13936 L
.375 .16335 L
.41667 .18802 L
.45833 .21331 L
.5 .23917 L
.54167 .26555 L
.58333 .2924 L
.625 .31969 L
.66667 .3474 L
.70833 .37549 L
.75 .40395 L
.79167 .43275 L
.83333 .46188 L
.875 .49132 L
.91667 .52105 L
.95833 .55107 L
1 .58135 L
s
P
P
p
p
1 Mabswid
0 0 m
.0013 0 L
.0026 1e-05 L
.00391 3e-05 L
.00521 6e-05 L
.00781 .00013 L
.01042 .00022 L
.01302 .00035 L
.01563 .0005 L
.02083 .00089 L
.02604 .0014 L
.03125 .00201 L
.04167 .00358 L
.05208 .00559 L
.0625 .00805 L
.08333 .01431 L
.10417 .02235 L
.125 .03219 L
.16667 .05723 L
.20833 .08941 L
.25 .12876 L
.29167 .17525 L
.33333 .2289 L
.375 .2897 L
.41667 .35766 L
.45833 .43277 L
.5 .51503 L
.54167 .60444 L
s
.54753 .61803 m
.54167 .60444 L
s
s
s
s
s
s
s
s
s
s
s
s
P
P
p
p
2 Mabswid
0 .00041 m
.00521 .00049 L
.01042 .00059 L
.01563 .00071 L
.02083 .00085 L
.03125 .00122 L
.03646 .00146 L
.04167 .00175 L
.04688 .00209 L
.05208 .00251 L
.0625 .00359 L
.06771 .00431 L
.07292 .00516 L
.07813 .00618 L
.08333 .0074 L
.09375 .01062 L
.09896 .01272 L
.10417 .01523 L
.10938 .01825 L
.11458 .02186 L
.125 .03136 L
.13021 .03756 L
.13542 .04499 L
.14063 .05389 L
.14583 .06456 L
.15625 .09262 L
.16146 .11095 L
.16667 .13289 L
.17188 .15918 L
.17708 .19067 L
.1875 .27358 L
.19271 .3277 L
.19792 .39252 L
.20313 .47017 L
.20833 .56318 L
s
.2109 .61803 m
.20833 .56318 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
P
MathSubEnd
P
% End of sub-graphic
P
P
% End of Graphics
MathPictureEnd
end
